
package johar.interfaceinterpreter.star;

import java.util.List;

/**
 * This interface interacts with the Widgets; It performs any action 
 * required by the user, while handling all events generated by the Widgets; It 
 * interacts with GemSetting and various classes in the johar.idf package in order to 
 * serve requests raised via the Widgets.
 * 
 */
public interface CommandControllerBase {
	
	/**
	 * The method is called when a menu item is clicked.
	 * @param commandName
	 * Command Name
	 */
	public void commandMenuItemClicked(String commandName);
	
	/**
	 * The method is called when the Previous button (in a Command Dialog) is clicked. 
	 */
	public void previousButtonClicked();
	
	/**
	 * The method is called when the Next button (in a Command Dialog) is clicked.
	 */
	public void nextButtonClicked();
	
	/**
	 * The method is called when the OK button (in a Command Dialog) is clicked.
	 */
	public void commandOKButtonClicked();
	
	/**
	 * The method is called when the Cancel button (in a Command Dialog) is clicked.
	 */
	public void commandCancelButtonClicked();
	
	/**
	 * The method is called when the Add another button (in a Command Dialog) is clicked.
	 * @param paramName
	 * Parameter Name
	 */
	public void addMoreButtonClicked(String paramName);
	
	/**
	 * The method is called when the Move up button (in a Command Dialog) is clicked.
	 * @param paramName
	 * Parameter Name
	 * @param repNumber
	 * Repetition number
	 */
	public void moveUpButtonClicked(String paramName, int repNumber);
	
	/**
	 * The method is called when the Move down button (in a Command Dialog) is clicked.
	 * @param paramName
	 * Parameter Name
	 * @param repNumber
	 * Repetition number
	 */
	public void moveDownButtonClicked(String paramName, int repNumber);
	
	/**
	 * The method is called when the Delete button (in a Command Dialog) is clicked.
	 * @param paramName
	 * Parameter Name
	 * @param repNumber
	 * Repetition number
	 */
	public void deleteButtonClicked(String paramName, int repNumber);
	
	/**
	 * The method is called when the OK button of a Question Dialog is clicked.
	 * @param questionName
	 * Question Name
	 */
	public void questionOKButtonClicked(String questionName);
		
	/**
	 * The method is called when the Cancel button of a Question Dialog is clicked.
	 * @param questionName
	 * Question Name
	 */
	public void questionCancelButtonClicked(String questionName);
	
	/**
	 * This method is called when row(s) are selected in a browsable table. 
	 * @param tableName
	 * The name of the browsable table
	 */
	public void tableRowsSelected(String tableName);
	
	/**
	 *  This method is called when a table row is clicked in the Help Box.
	 * @param helpState
	 * The Help State (0 - Top Level State, 1 - Command State, 2 - Parameter State, 3 - Question State)
	 */
	public void tableRowClicked(int helpState);
	
	/**
	 * This method is called whenever any command (e.g Help) under the Star menu is selected.
	 * @param commandName
	 * Name of Command
	 */
	public void commandMenuItemClickedStar(String commandName);
	
	/**
	 * This method is called whenever the Back button is clicked in the Help Box.
	 */
	public void helpBackButtonClicked();
	
	/**
	 * This method is called whenever the OK button is clicked in the Help Box.
	 */
	public void helpOKButtonClicked();
	
	/**
	 * This method can be called by any of the Widgets to retrieve data from a non-browsable table.
	 * @param tableName
	 * Table Name
	 * @return
	 * List containing the requested data
	 */
	public List<String> getTableData(String tableName);
}
